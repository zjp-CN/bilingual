---
source: tests/pulldown_cmark.rs
expression: "Parser::new(&md).into_offset_iter().collect::<Vec<_>>()"

---
- - Start:
      Heading: H1
  - start: 0
    end: 18
- - Text: I/O event queue
  - start: 2
    end: 17
- - End:
      Heading: H1
  - start: 0
    end: 18
- - Start: Paragraph
  - start: 19
    end: 221
- - Text: "The I/O event queue is what handles most of our I/O tasks. Now we'll go through"
  - start: 19
    end: 98
- - SoftBreak
  - start: 98
    end: 99
- - Text: "how we register events to that queue later on, but once an event is ready we"
  - start: 99
    end: 175
- - SoftBreak
  - start: 175
    end: 176
- - Text: "it sends the "
  - start: 176
    end: 189
- - Code: event_id
  - start: 189
    end: 199
- - Text: " through our channel."
  - start: 199
    end: 220
- - End: Paragraph
  - start: 19
    end: 221
- - Start:
      CodeBlock:
        Fenced: "rust, ignored"
  - start: 222
    end: 393
- - Text: "fn process_epoll_events(&mut self, event_id: usize) {\n    self.callbacks_to_run.push((event_id, Js::Undefined));\n    self.epoll_pending_events -= 1;\n}\n"
  - start: 239
    end: 390
- - End:
      CodeBlock:
        Fenced: "rust, ignored"
  - start: 222
    end: 393
- - Start: Paragraph
  - start: 395
    end: 601
- - Text: "As we'll see later on, the way we designed this, we actually made our "
  - start: 395
    end: 465
- - Code: event_id
  - start: 465
    end: 475
- - SoftBreak
  - start: 475
    end: 476
- - Text: "and "
  - start: 476
    end: 480
- - Code: callback_id
  - start: 480
    end: 493
- - Text: " the same value since both represents an unique value for this"
  - start: 493
    end: 555
- - SoftBreak
  - start: 555
    end: 556
- - Text: event. It simplifies things slightly for us.
  - start: 556
    end: 600
- - End: Paragraph
  - start: 395
    end: 601
- - Start: Paragraph
  - start: 602
    end: 943
- - Text: "We add the "
  - start: 602
    end: 613
- - Code: callback_id
  - start: 613
    end: 626
- - Text: " to the collection of callbacks to run. We pass"
  - start: 626
    end: 673
- - SoftBreak
  - start: 673
    end: 674
- - Text: "in "
  - start: 674
    end: 677
- - Code: "Js::Undefined"
  - start: 677
    end: 692
- - Text: " since we'll not actually pass any data along here. You'll see"
  - start: 692
    end: 754
- - SoftBreak
  - start: 754
    end: 755
- - Text: "why when we reach the "
  - start: 755
    end: 777
- - Start:
      Link:
        - Inline
        - "./8_3_http_module.md"
        - ""
  - start: 777
    end: 812
- - Text: Http module
  - start: 778
    end: 789
- - End:
      Link:
        - Inline
        - "./8_3_http_module.md"
        - ""
  - start: 777
    end: 812
- - Text: " chapter, but the main"
  - start: 812
    end: 834
- - SoftBreak
  - start: 834
    end: 835
- - Text: "point is that the I/O queue doesn't return any data itself, it just tells us that"
  - start: 835
    end: 916
- - SoftBreak
  - start: 916
    end: 917
- - Text: data is ready to be read.
  - start: 917
    end: 942
- - End: Paragraph
  - start: 602
    end: 943
- - Start: Paragraph
  - start: 944
    end: 1099
- - Text: "Lastly it's only for our own bookkeeping we decrement the count of outstanding"
  - start: 944
    end: 1022
- - SoftBreak
  - start: 1022
    end: 1023
- - Code: epoll_pending_events
  - start: 1023
    end: 1045
- - Text: " so we keep track of how many events we have pending."
  - start: 1045
    end: 1098
- - End: Paragraph
  - start: 944
    end: 1099
- - Start: BlockQuote
  - start: 1100
    end: 2459
- - Start: Paragraph
  - start: 1102
    end: 1413
- - Start: Strong
  - start: 1102
    end: 1165
- - Text: "Why even keep track of how many "
  - start: 1104
    end: 1136
- - Code: epoll_events
  - start: 1136
    end: 1150
- - Text: " are pending?"
  - start: 1150
    end: 1163
- - End: Strong
  - start: 1102
    end: 1165
- - SoftBreak
  - start: 1165
    end: 1166
- - Text: "We don't use this value here, but I added it to make it easier to create"
  - start: 1168
    end: 1240
- - SoftBreak
  - start: 1240
    end: 1241
- - Text: "some "
  - start: 1243
    end: 1248
- - Code: print
  - start: 1248
    end: 1255
- - Text: " statements showing the status of our runtime at different points."
  - start: 1255
    end: 1321
- - SoftBreak
  - start: 1321
    end: 1322
- - Text: "However, there are good reasons to keep track of these events even if we don't use them."
  - start: 1324
    end: 1412
- - End: Paragraph
  - start: 1102
    end: 1413
- - Start: Paragraph
  - start: 1417
    end: 1605
- - Text: "One area we're taking shortcuts on all the way here is security. If someone were"
  - start: 1417
    end: 1497
- - SoftBreak
  - start: 1497
    end: 1498
- - Text: "to build a public facing server out of this, we need to account for slow networks"
  - start: 1500
    end: 1581
- - SoftBreak
  - start: 1581
    end: 1582
- - Text: and malicious users.
  - start: 1584
    end: 1604
- - End: Paragraph
  - start: 1417
    end: 1605
- - Start: Paragraph
  - start: 1609
    end: 2069
- - Text: "Since we use "
  - start: 1609
    end: 1622
- - Code: IOCP
  - start: 1622
    end: 1628
- - Text: ", which is a completion based model, we allocate memory for"
  - start: 1628
    end: 1687
- - SoftBreak
  - start: 1687
    end: 1688
- - Text: "a buffer for each "
  - start: 1690
    end: 1708
- - Code: Read
  - start: 1708
    end: 1714
- - Text: " or "
  - start: 1714
    end: 1718
- - Code: Write
  - start: 1718
    end: 1725
- - Text: " event. When we lend this memory to the OS,"
  - start: 1725
    end: 1768
- - SoftBreak
  - start: 1768
    end: 1769
- - Text: "we're in a weird situation. We own it, but we can't touch it. There are several"
  - start: 1771
    end: 1850
- - SoftBreak
  - start: 1850
    end: 1851
- - Text: "ways in which we could register interest in more events than occur, and thereby"
  - start: 1853
    end: 1932
- - SoftBreak
  - start: 1932
    end: 1933
- - Text: allocating memory that is just held in the buffers. Now if someone wanted to crash
  - start: 1935
    end: 2017
- - SoftBreak
  - start: 2017
    end: 2018
- - Text: "our server, they could cause this intentionally."
  - start: 2020
    end: 2068
- - End: Paragraph
  - start: 1609
    end: 2069
- - Start: Paragraph
  - start: 2073
    end: 2276
- - Text: "A good practice is therefore to create a \"high watermark\" by keeping track of"
  - start: 2073
    end: 2150
- - SoftBreak
  - start: 2150
    end: 2151
- - Text: "the number of pending events, and when we reach that watermark, we queue events"
  - start: 2153
    end: 2232
- - SoftBreak
  - start: 2232
    end: 2233
- - Text: instead of registering them with the OS.
  - start: 2235
    end: 2275
- - End: Paragraph
  - start: 2073
    end: 2276
- - Start: Paragraph
  - start: 2280
    end: 2459
- - Text: "By extension, this is also why you should "
  - start: 2280
    end: 2322
- - Start: Strong
  - start: 2322
    end: 2332
- - Text: always
  - start: 2324
    end: 2330
- - End: Strong
  - start: 2322
    end: 2332
- - Text: " have a timeout on these events"
  - start: 2332
    end: 2363
- - SoftBreak
  - start: 2363
    end: 2364
- - Text: so that you at some point can reclaim the memory and return an timeout error if
  - start: 2366
    end: 2445
- - SoftBreak
  - start: 2445
    end: 2446
- - Text: necessary.
  - start: 2448
    end: 2458
- - End: Paragraph
  - start: 2280
    end: 2459
- - End: BlockQuote
  - start: 1100
    end: 2459

